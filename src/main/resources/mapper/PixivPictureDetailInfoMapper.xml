<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kiharu.hareru.mapper.PixivPictureDetailInfoMapper">
    <resultMap id="ColumnResultMap" type="org.kiharu.hareru.entity.PixivPictureDetailInfo">
        <result column="id" jdbcType="BIGINT" property="id" />
        <result column="pixiv_id" jdbcType="VARCHAR" property="pixivId" />
        <result column="existed" jdbcType="TINYINT" property="existed" />
        <result column="downloaded" jdbcType="TINYINT" property="downloaded" />
        <result column="original_url" jdbcType="VARCHAR" property="originalUrl" />
        <result column="author_id" jdbcType="VARCHAR" property="authorId" />
        <result column="author_name" jdbcType="VARCHAR" property="authorName" />
        <result column="page_count" jdbcType="INTEGER" property="pageCount" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="width" jdbcType="INTEGER" property="width" />
        <result column="height" jdbcType="INTEGER" property="height" />
        <result column="illust_type" jdbcType="INTEGER" property="illustType" />
        <result column="pic_suffix" jdbcType="VARCHAR" property="picSuffix" />
        <result column="r18_restrict" jdbcType="TINYINT" property="r18Restrict" />
        <result column="bookmark_count" jdbcType="INTEGER" property="bookmarkCount" />
        <result column="like_count" jdbcType="INTEGER" property="likeCount" />
        <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
        <result column="view_count" jdbcType="INTEGER" property="viewCount" />
        <result column="response_count" jdbcType="INTEGER" property="responseCount" />
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
        <result column="upload_date" jdbcType="TIMESTAMP" property="uploadDate" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="mini_url" jdbcType="VARCHAR" property="miniUrl" />
        <result column="thumb_url" jdbcType="VARCHAR" property="thumbUrl" />
        <result column="small_url" jdbcType="VARCHAR" property="smallUrl" />
        <result column="regular_url" jdbcType="VARCHAR" property="regularUrl" />
        <result column="size_b" jdbcType="INTEGER" property="sizeB" />
        <result column="size_kb" jdbcType="INTEGER" property="sizeKB" />
        <result column="size_mb" jdbcType="INTEGER" property="sizeMB" />
        <result column="pixiv_id_int" jdbcType="INTEGER" property="pixivIdInt" />
        <result column="author_id_int" jdbcType="INTEGER" property="authorIdInt" />
        <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="request_status" jdbcType="INTEGER" property="requestStatus" />
    </resultMap>

    <sql id="allColumns">
        id,pixiv_id,existed,downloaded,original_url,author_id,author_name,page_count,title,width,height,
        illust_type,pic_suffix,r18_restrict,bookmark_count,like_count,comment_count,view_count,response_count,
        create_date,upload_date,tags,mini_url,thumb_url,small_url,regular_url,size_b,size_kb,size_mb,pixiv_id_int,
        author_id_int,add_time,update_time
    </sql>

    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO pixiv_picture_detail_info
        (
            pixiv_id,existed,downloaded,original_url,author_id,author_name,page_count,title,width,height,
            illust_type,pic_suffix,r18_restrict,bookmark_count,like_count,comment_count,view_count,response_count,
            create_date,upload_date,tags,mini_url,thumb_url,small_url,regular_url,size_b,size_kb,size_mb,
            pixiv_id_int,author_id_int,request_status
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
        (
            #{item.pixivId ,jdbcType=VARCHAR},
            #{item.existed ,jdbcType=TINYINT},
            #{item.downloaded ,jdbcType=TINYINT},
            #{item.originalUrl ,jdbcType=VARCHAR},
            #{item.authorId ,jdbcType=VARCHAR},
            #{item.authorName ,jdbcType=VARCHAR},
            #{item.pageCount ,jdbcType=INTEGER},
            #{item.title ,jdbcType=VARCHAR},
            #{item.width ,jdbcType=INTEGER},
            #{item.height ,jdbcType=INTEGER},
            #{item.illustType ,jdbcType=INTEGER},
            #{item.picSuffix ,jdbcType=VARCHAR},
            #{item.r18Restrict ,jdbcType=TINYINT},
            #{item.bookmarkCount ,jdbcType=INTEGER},
            #{item.likeCount ,jdbcType=INTEGER},
            #{item.commentCount ,jdbcType=INTEGER},
            #{item.viewCount ,jdbcType=INTEGER},
            #{item.responseCount ,jdbcType=INTEGER},
            #{item.createDate ,jdbcType=TIMESTAMP},
            #{item.uploadDate ,jdbcType=TIMESTAMP},
            #{item.tags ,jdbcType=VARCHAR},
            #{item.miniUrl ,jdbcType=VARCHAR},
            #{item.thumbUrl ,jdbcType=VARCHAR},
            #{item.smallUrl ,jdbcType=VARCHAR},
            #{item.regularUrl ,jdbcType=VARCHAR},
            #{item.sizeB ,jdbcType=INTEGER},
            #{item.sizeKB,jdbcType=INTEGER},
            #{item.sizeMB ,jdbcType=INTEGER},
            #{item.pixivIdInt ,jdbcType=INTEGER},
            #{item.authorIdInt ,jdbcType=INTEGER},
            #{item.requestStatus, jdbcType=INTEGER}
        )
        </foreach>
    </insert>

    <select id="selectOriginalUrls" parameterType="java.util.List" resultType="java.lang.String">
        SELECT original_url
        FROM pixiv_picture_detail_info
        WHERE existed != 0
        AND pixiv_id IN
        <foreach collection="pixivIdList" item="pixivId" open="(" separator="," close=")">
            #{pixivId, jdbcType=VARCHAR}
        </foreach>
    </select>

</mapper>